Categories of AWS Services:
1. Compute
    - EC2 (Elastic Compute Cloud)
    - Elastic beanstalk
    - Lambda
    - Elastic Container Services
    - Elastic Container Registry
    - Elastic Kubernetes Services

2. Storage:
    - S3 (Simple Storage Service)
    - Elastic Block Store 
    - Elastic File System
    - Glacier

3. Database: 
    - RDS
    - Dynmo
    - Elasticache

4. Migration:
    - Snowball
    - Snowmobile
    - Database Migration Services
    - Applicaion Discovery Services

===================================================================================================

AWS S3: (Simple Storage Service)
    1. Storage Limits
    2. Public URLs
    3. Programmatical Acess

====================================================================================================

AWS Parameter Store: Securely store and retrive Parameter

====================================================================================================

AWS Cloudshell: Cloud-based shell envirnmnet for AWS

====================================================================================================

Server Types:
    - Compute Engines
        - AWS, GCP, Azure, Linode, Digital Ocean, Vultr, etc.
    - Home Server

====================================================================================================

AWS EC2 (Elastic Compute Cloud):

Resorce Nomenclature:
    - vCPU
    - Memory

Connecting EC2 instance through ssh:
ssh -i <key-pair (.pem file)> <user>@<public DNS/ public IP address>
Example: ssh -i "ul_keypair.pem" ubuntu@ec2-15-223-197-192.ca-central-1.compute.amazonaws.com

Code from local to server:
    1. scp -i "ul_keypair.pem" ./backend ubuntu@15.223.197.192:~/backend
    2. Git
        2.1 Public Repo: git clone <repo-url>
        2.2 Private Repo:
            - within the EC2 server / Cloud server
            - Create a RSA token key
                ssh-keygen -t rsa -b 4096 -C "<email.id>"
                EXample: ssh-keygen -t rsa -b 4096 -C "22.utkarsh.kapoor@gmail.com"
            - 
                eval "$(ssh-agent -s)"
            - Show the RSA key
                ssh-add ~/.ssh/id_rsa
            - Copy paste the key into your github repo
                Github repo > Settings > Deploy keys > Add deploy key
            - Now clone the repo
                git clone <repo-url>

DNS
Ingress - Reverse proxy

    1. Nginx
    2. Apache HTTP Server
    3. Traefik
    4. Caddy

NGINX = High performance web server (ingress controller/ serve application/ load balancing, protect DoS, protect WAF, service mesh etc.)

1. Installing Nginx: sudo apt install nginx
2. Running NGINX and checking it's status: 
    sudo systemctl start nginx
    sudo systemctl enable nginx
    sudo systemctl status nginx
3. Running processors and it's ports
    lsof
    sudo lsof -i -P -n
    sudo lsof -i -P -n | grep LISTEN

Runnimng through no-hup to make it persitant(oomands for it):
    - nohup python3 app.py &

Setting up reverse proxy on nginx:
    1. cd /etc/nginx
    2. cd sites-enabled
    3. vim test
    and update following in it:
    server {
        listen: 80;
        listen [::]:80;

        server_name uk.com;

        root /var/www/example.com;
        location / {
            proxy_pass http://localhost:8000
        }
    }

SSL(Secured Socket layer) & TLS(Transport layer security): HTTPS





